<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jekyll Polymer Theme</title>
    <description>This is a material design theme for Polymer using Google&#39;s Polymer library. It&#39;s still an early draft, so be nice.
</description>
    <link>http://blog.juliaebert.com/</link>
    <atom:link href="http://blog.juliaebert.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 23 Jun 2015 17:27:38 -0400</pubDate>
    <lastBuildDate>Tue, 23 Jun 2015 17:27:38 -0400</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>About the Jekyll Polymer Theme</title>
        <description>&lt;p&gt;This theme was created using the Google’s Polymer 1.0. It’s currently a first draft, so there are still features I plan to add and fix. (&lt;a href=&quot;https://github.com/jtebert/jekyll-polymer&quot;&gt;See the Github repository for details.&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;I created this theme because I couldn’t figure out how to set up a Jekyll project to play nicely with Polymer, and because I didn’t find any Jekyll blog themes available that used Polymer or followed Google’s material design specifications.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;structure&quot;&gt;Structure&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;elements/&lt;/code&gt;: Custom web components using Polymer&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;scripts/&lt;/code&gt;: Javascript. Will be minimized when built.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;styles/&lt;/code&gt;: Custom CSS. CSS used here will be minimized when built.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;bower_components&lt;/code&gt;: Content installed via bower goes here&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;node_modules&lt;/code&gt;: Content installed via npm goes here&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;build-instructions&quot;&gt;Build Instructions&lt;/h1&gt;

&lt;p&gt;This part is pretty brutal right now but gets the job done. Hopefully I’ll get better with gulp and clean this up soon.&lt;/p&gt;

&lt;p&gt;For now, just use Jekyll to build and serve. The gulp stuff doesn’t really work yet.&lt;/p&gt;
</description>
        <pubDate>Fri, 19 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://blog.juliaebert.com/2015/06/19/about-jekyll-polymer-theme.html</link>
        <guid isPermaLink="true">http://blog.juliaebert.com/2015/06/19/about-jekyll-polymer-theme.html</guid>
        
        
      </item>
    
      <item>
        <title>Post with blocks of text</title>
        <description>&lt;p&gt;Schlitz YOLO synth sriracha lumbersexual magna, lo-fi leggings nostrud pug Carles XOXO hoodie eiusmod. Ea officia crucifix sunt lumbersexual nesciunt, jean shorts Etsy occupy tousled ennui irony. Adipisicing exercitation bespoke, Pinterest drinking vinegar officia food truck aliquip. Chillwave Intelligentsia four loko flannel cornhole bespoke. Ea chillwave ennui anim commodo. Wayfarers brunch trust fund crucifix, squid kitsch health goth Pitchfork cliche Etsy sustainable iPhone distillery 8-bit. Thundercats non Portland forage minim selfies, food truck irure mustache.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Enim cardigan Tumblr, Thundercats trust fund Godard Austin cliche occaecat literally post-ironic drinking vinegar salvia magna small batch. Brunch lomo chambray delectus narwhal whatever, sriracha Marfa paleo twee. Meditation dreamcatcher tattooed Truffaut ullamco. Try-hard deep v stumptown quis Vice mixtape, ad Etsy odio paleo quinoa. Ennui seitan put a bird on it banjo culpa. Narwhal before they sold out jean shorts ad ullamco, et ennui magna. Kickstarter paleo listicle nulla, occaecat incididunt nesciunt retro salvia.&lt;/p&gt;

&lt;p&gt;Ugh Wes Anderson kogi master cleanse, trust fund leggings sed High Life drinking vinegar. Ad cornhole artisan dreamcatcher YOLO, labore Banksy eiusmod messenger bag enim tofu culpa. High Life qui street art cardigan. Trust fund Banksy keffiyeh pickled, Brooklyn single-origin coffee actually salvia. Sustainable id mlkshk whatever. PBR cillum drinking vinegar swag. Keytar magna cold-pressed brunch.&lt;/p&gt;

&lt;p&gt;Farm-to-table PBR craft beer, cliche commodo food truck before they sold out nostrud adipisicing semiotics. Nesciunt kitsch Carles, typewriter banjo sapiente bitters four dollar toast migas. Umami tousled irony taxidermy, PBR +1 bespoke culpa. Kogi aliqua single-origin coffee, shabby chic nisi trust fund master cleanse mumblecore aute Banksy quinoa. Mlkshk small batch gastropub jean shorts. You probably haven’t heard of them vegan Tumblr, odio Blue Bottle iPhone stumptown freegan ut tempor selvage biodiesel post-ironic nesciunt. Swag culpa bespoke, mixtape Tumblr American Apparel ut Pitchfork.&lt;/p&gt;

&lt;p&gt;Cronut asymmetrical synth, Marfa meditation twee tempor quis Thundercats scenester plaid readymade salvia dolor fugiat. Vice assumenda flannel reprehenderit before they sold out, flexitarian normcore locavore pickled chillwave. Aliqua in wayfarers, cardigan narwhal esse mustache tote bag 8-bit placeat YOLO. Typewriter master cleanse cold-pressed food truck. DIY YOLO gentrify, freegan mustache ethical nesciunt gluten-free small batch tofu. Placeat tempor artisan, delectus ennui duis incididunt irure pariatur skateboard. Narwhal wolf esse leggings, bitters Williamsburg put a bird on it enim swag four dollar toast Vice Schlitz cardigan irony dreamcatcher.&lt;/p&gt;

&lt;p&gt;Occaecat magna Intelligentsia, laborum synth before they sold out Helvetica nulla kale chips eu next level DIY trust fund. Forage pour-over scenester ut meggings. Food truck eu labore 90’s, deserunt messenger bag next level paleo PBR&amp;amp;B pork belly. Jean shorts DIY before they sold out direct trade, vegan tote bag culpa mixtape nesciunt slow-carb listicle ennui put a bird on it Brooklyn. Ut cronut lumbersexual, letterpress stumptown delectus seitan reprehenderit Bushwick messenger bag incididunt street art polaroid lomo hella. Do voluptate pork belly, fanny pack direct trade tote bag nihil. Mumblecore aesthetic Tumblr VHS master cleanse Portland.&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://blog.juliaebert.com/2015/06/17/hipsum.html</link>
        <guid isPermaLink="true">http://blog.juliaebert.com/2015/06/17/hipsum.html</guid>
        
        
      </item>
    
      <item>
        <title>Image in front matter (featured image)</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom. You really suck.&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Wed, 10 Jun 2015 10:03:06 -0400</pubDate>
        <link>http://blog.juliaebert.com/jekyll/update/2015/06/10/featured-image.html</link>
        <guid isPermaLink="true">http://blog.juliaebert.com/jekyll/update/2015/06/10/featured-image.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve --watch&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Mon, 08 Jun 2015 17:27:27 -0400</pubDate>
        <link>http://blog.juliaebert.com/2015/06/08/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://blog.juliaebert.com/2015/06/08/welcome-to-jekyll.html</guid>
        
        
      </item>
    
      <item>
        <title>Typography</title>
        <description>&lt;p&gt;Here are the different features and styles available for posts written in Markdown.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;headings&quot;&gt;Headings&lt;/h1&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;Heading 1&lt;/h1&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;Heading 2&lt;/h2&gt;

&lt;h3 id=&quot;heading-3&quot;&gt;Heading 3&lt;/h3&gt;

&lt;h4 id=&quot;heading-4&quot;&gt;Heading 4&lt;/h4&gt;

&lt;h5 id=&quot;heading-5&quot;&gt;Heading 5&lt;/h5&gt;

&lt;h6 id=&quot;heading-6&quot;&gt;Heading 6&lt;/h6&gt;

&lt;h1 id=&quot;tables&quot;&gt;Tables&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Markdown Extra&lt;/strong&gt; has a special syntax for tables:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Item&lt;/th&gt;
      &lt;th&gt;Value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Computer&lt;/td&gt;
      &lt;td&gt;1600 USD&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Phone&lt;/td&gt;
      &lt;td&gt;12 USD&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Pipe&lt;/td&gt;
      &lt;td&gt;1 USD&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;You can specify column alignment with one or two colons:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Item&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Value&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Qty&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Computer&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1600 USD&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Phone&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12 USD&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Pipe&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1 USD&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;234&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;lists&quot;&gt;Lists&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Item 1&lt;/li&gt;
  &lt;li&gt;Item 2
    &lt;ul&gt;
      &lt;li&gt;Subitem 2.1&lt;/li&gt;
      &lt;li&gt;Subitem 2.2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Item 3&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;/h1&gt;

&lt;p&gt;You can write block quotes.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a block quote.
It’s split over multiple lines.&lt;/p&gt;

  &lt;p&gt;It can also have multiple paragraphs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;math-with-mathjax&quot;&gt;Math (with MathJax)&lt;/h1&gt;

&lt;p&gt;You can render &lt;em&gt;LaTeX&lt;/em&gt; mathematical expressions using &lt;strong&gt;MathJax&lt;/strong&gt;, as on &lt;a href=&quot;http://math.stackexchange.com/&quot;&gt;math.stackexchange.com&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;There are inline equations like \( y = x + 2 \) indicated by &lt;code&gt;\\( ... \\)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can also display an equation (not inline displayed) using inline code, like \[ y = x + 4\] which you do with &lt;code&gt;\\[ ... \\]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Or you can display a block of math by surrounding it with &lt;code&gt;$$ ... $$&lt;/code&gt;. Like this:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt\,.&lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Make sure you include MathJax into your publications to render mathematical expression correctly. Your page/template should include something like:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;
&amp;lt;script type=&quot;text/javascript&quot; src=&quot;https://stackedit.io/libs/MathJax/MathJax.js?config=TeX-AMS_HTML&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;code&quot;&gt;Code&lt;/h1&gt;

&lt;h2 id=&quot;inline-code&quot;&gt;Inline code&lt;/h2&gt;

&lt;p&gt;Code embedded in a paragraph looks like &lt;code&gt;this is code&lt;/code&gt;. Code can also be in blocks with or without line numbers.&lt;/p&gt;

&lt;h2 id=&quot;code-blocks-fenced-code&quot;&gt;Code blocks (fenced code)&lt;/h2&gt;

&lt;p&gt;Code blocks have syntax highlighting courtesy of highlight.js. You can specify the code language and whether you want the code block to include line numbers. (You can include line numbers using just &lt;code&gt;linenos&lt;/code&gt; instead of &lt;code&gt;linenos=table&lt;/code&gt;, but this puts the line numbers in the same lines as the code so that it becomes impossible to copy and paste.)&lt;/p&gt;

&lt;p&gt;With line numbers (as table):&lt;/p&gt;

&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;1
2
3
4
5&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT. This is a long line to test scrolling and wrapping in code.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Without line numbers:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT. This is a long line to test scrolling and wrapping in code.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With line numbers (inline):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT. This is a long line to test scrolling and wrapping in code.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;definition-lists&quot;&gt;Definition Lists&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Markdown Extra&lt;/strong&gt; has a special syntax for definition lists too:&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;Term 1&lt;/dt&gt;
  &lt;dt&gt;Term 2&lt;/dt&gt;
  &lt;dd&gt;Definition A&lt;/dd&gt;
  &lt;dd&gt;Definition B&lt;/dd&gt;
  &lt;dt&gt;Term 3&lt;/dt&gt;
  &lt;dd&gt;
    &lt;p&gt;Definition C&lt;/p&gt;
  &lt;/dd&gt;
  &lt;dd&gt;
    &lt;p&gt;Definition D&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;part of definition D&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/dd&gt;
&lt;/dl&gt;

&lt;h1 id=&quot;dividers&quot;&gt;Dividers&lt;/h1&gt;

&lt;p&gt;Divide up sections and stuff with dividers.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;They look like that.&lt;/p&gt;

&lt;h1 id=&quot;font-weights-and-styles&quot;&gt;Font weights and styles&lt;/h1&gt;

&lt;p&gt;This text is &lt;strong&gt;bold text&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This is &lt;em&gt;italicized&lt;/em&gt; text.&lt;/p&gt;

&lt;h1 id=&quot;links-and-footnotes&quot;&gt;Links and Footnotes&lt;/h1&gt;

&lt;p&gt;You can create footnotes like this&lt;sup id=&quot;fnref:footnote&quot;&gt;&lt;a href=&quot;#fn:footnote&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;You can embed links with a direct link, like &lt;a href=&quot;http://www.google.com&quot;&gt;this link to Google&lt;/a&gt;. Links can also be in a separated form like &lt;a href=&quot;http://jekyllrb.com&quot;&gt;this link to the Jekyll documention&lt;/a&gt;. (That’s useful if you want to link to the same website multiple times &lt;a href=&quot;http://jekyllrb.com&quot;&gt;like this&lt;/a&gt;.)&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:footnote&quot;&gt;
      &lt;p&gt;Here is the &lt;em&gt;text&lt;/em&gt; of the &lt;strong&gt;footnote&lt;/strong&gt;. &lt;a href=&quot;#fnref:footnote&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 08 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://blog.juliaebert.com/2015/06/08/typography.html</link>
        <guid isPermaLink="true">http://blog.juliaebert.com/2015/06/08/typography.html</guid>
        
        
      </item>
    
      <item>
        <title>Shiny Matlab Figures: Exporting</title>
        <description>&lt;p&gt;So far in our quest to make better Matlab figures, we’ve looked at &lt;a href=&quot;/2014/12/15/shiny-matlab-figures-drawing-error-with-patches.html&quot;&gt;an alternative way to draw error bars&lt;/a&gt; and &lt;a href=&quot;/2014/12/15/shiny-matlab-figures-sizing-and-parameters.html&quot;&gt;adjusting parameters to make figures more readable&lt;/a&gt;. Last (for now) but not least: how to best get those figures out of Matlab and into the real world. There are some built-in methods, but I’ve found they don’t work quite as well as an alternative from the Matlab File Exchange.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;A note on all of these: The figures were exported without resizing the figure window, which is how I make my figures unless I have a compelling reason to change the aspect ratio or size. If you scale the window size, your lines and fonts will be smaller relative to the graph.&lt;/p&gt;

&lt;h2 id=&quot;png&quot;&gt;PNG&lt;/h2&gt;

&lt;p&gt;The simplest method is to directly save the figure as a PNG file with the save button or command line. (Note: never use JPEG for graphics like this. JPEGs are compressed and the edges and borders in the image will look bad). This is the result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/-GhSNITJGoXM/VI8kM4kwOVI/AAAAAAAACFQ/brbjLg9KjkQ/s0/export_png.png&quot; alt=&quot;png plot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You’ll notice, though, that the edges and text look somewhat choppy because the output has no anti-aliasing. Also, sometimes the x-axis label is cut off, as happened here. And last but not least, you can’t do any refinements or editing of the image after it’s created.&lt;/p&gt;

&lt;h2 id=&quot;eps&quot;&gt;EPS&lt;/h2&gt;

&lt;p&gt;The next option is to save the figure in an editable vector format. Matlab will let you directly save EPS files for this purpose. Here’s the result if we save as EPS, then open the file in Inkscape (for editing) and export as a PNG from there:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/-8pJz534FmMU/VI8ll7ihcUI/AAAAAAAACFg/A6A_BRT634g/s0/export_eps.png&quot; alt=&quot;eps plot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This looks pretty much the same as the PNG, with the same problems! Why? Because EPS files don’t support transparency and our figure includes a patch with transparency, Matlab exports the entire thing as a raster (pixel-based) image embedded in the EPS. So we’ve gained nothing. EPS works OK if you have a figure without transparency, but the files are a little strange (such as poor letter spacing) and hard to work with in my preferred, free vector editor of Inkscape.&lt;/p&gt;

&lt;h2 id=&quot;svg&quot;&gt;SVG&lt;/h2&gt;

&lt;p&gt;Which brings us to the final and (in my opinion) best way to export images: plot2svg. It’s available for download on the Matlab File Exchange. Simply download the file, add it to your path in Matlab, and call plot2svg. It will save the current figure as an SVG, which is a more advanced vector file format that supports things like transparency and is really easy to work with in Inkscape. Here’s the result when exported as a PNG from Inkscape:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/-enA9wwEPaOo/VI8nzT4K2zI/AAAAAAAACFw/iHlqZBgWaJU/s0/export_svg.png&quot; alt=&quot;svg plot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That’s one shiny-looking graph. Making adjustments to the graph like fonts, labels, and combining graphs becomes really easy working with SVG files. Plus, you can do things like export them as PNGs of any size or export them as scalable PDFs to embed in a document.&lt;/p&gt;

&lt;p&gt;The worst “export” of a Matlab graph I’ve seen was a screen capture of the Matlab window copied and pasted onto a poster. Now you can feel snooty about how ridiculously awesome your figures look in comparison.&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Dec 2014 13:48:00 -0500</pubDate>
        <link>http://blog.juliaebert.com/2014/12/15/shiny-matlab-figures-exporting.html</link>
        <guid isPermaLink="true">http://blog.juliaebert.com/2014/12/15/shiny-matlab-figures-exporting.html</guid>
        
        <category>Matlab</category>
        
        <category>figures</category>
        
        <category>graphs</category>
        
        
      </item>
    
      <item>
        <title>Shiny Matlab Figures: Sizing and Parameters</title>
        <description>&lt;p&gt;In my never-ending quest to create decent-looking graphs with Matlab, one challenge is the default parameters for figures, particularly in terms of font size and line thickness. These defaults look alright for looking at the figures yourself to figure out what’s going on. But if you want to export them to use in a presentation, poster, or paper, the lines are too thin and the fonts too small. Using the same data generation as in my previous post, it looks something like this:&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/-c-mrIfTXWuo/VI8dXmXWLGI/AAAAAAAACEU/QE97Zhkkh4A/s0/default.png&quot; alt=&quot;plot1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That comes from this little bit of Matlab code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;c&quot;&gt;% Plotting with default settings&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;legend_labels&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Square Root Growth&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Linear Growth&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hold&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Plot with default values&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Percent Complete&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Arbitrary Values&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_vals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_vals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data2_mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend_labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I mean, that figure doesn’t look bad, but this looks a lot slicker:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/-UsWG1xqrh8c/VI8eS8SVmdI/AAAAAAAACEw/hUaHW2GYVJo/s0/refined.png&quot; alt=&quot;plot2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are a few modifications to the defaults I’ve figured out along the way to come to this, so that this figure comes from:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;c&quot;&gt;% Graphically refined plotting&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;font_size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title_size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;legend_labels&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Square Root Growth&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Linear Growth&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Box&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;off&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;... % Remove outline for top/right of graph&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;FontSize&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;font_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;... % Set size of tick and axis labels&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;LineWidth&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;% Set width of axes to 2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hold&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Graphically refined plotting&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;FontSize&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;FontWeight&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Percent Complete&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;FontWeight&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Bold&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Arbitrary Values&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;FontWeight&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Bold&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_vals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;LineWidth&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_vals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data2_mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;LineWidth&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend_labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Location&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;NorthWest&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;boxoff&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let’s go through each of the pieces here.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Font sizes:&lt;/strong&gt; By setting variables for the title and font sizes, it’s easier to make them consistent (and modify them) for multiple figures produced in a file. I’ve found 16 and 20 pt fonts to work well.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;set(gca, ...)&lt;/code&gt;:&lt;/strong&gt; This sets a couple of parameters for the current set of axes. The ‘Box’ ensures that there no lines are placed on the top and right sides of the figure. Without this, they’ll show up in some (but not all!) figures. I think it looks nicer without them. ‘FontSize’ makes use of the variable set above to change the size of text for axes labels and legends. Setting the ‘LineWidth’ will make the axes and tick marks thicker, but doesn’t set the thickness of the lines in the plots.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Title and Labels:&lt;/strong&gt; Here you manually set the size of the title and make the labels bold. It just makes things stand out better.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;&#39;LineWidth&#39;&lt;/code&gt;&lt;/strong&gt;: You have to manually set the line thickness for every plot you make.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Legend:&lt;/strong&gt; In the first figure, the legend hid part of the data. However, legends can be re-positioned (take a look at &lt;a href=&quot;http://www.mathworks.com/help/matlab/ref/legend-properties.html&quot;&gt;‘Location’ in the legend properties documentation&lt;/a&gt;). I also got rid of the box (and background) of the legend, which I think just looks ugly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Just like with plotting the error bars as patches, this takes a little more work and code. The result once again, though, is much nicer-looking, professional graphs that are much easier for your audience to actually read.&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Dec 2014 13:01:00 -0500</pubDate>
        <link>http://blog.juliaebert.com/2014/12/15/shiny-matlab-figures-sizing-and-parameters.html</link>
        <guid isPermaLink="true">http://blog.juliaebert.com/2014/12/15/shiny-matlab-figures-sizing-and-parameters.html</guid>
        
        <category>Matlab</category>
        
        <category>figures</category>
        
        
      </item>
    
      <item>
        <title>Shiny Matlab Figures: Drawing Error with Patches</title>
        <description>&lt;p&gt;I make a lot of Matlab figures. That’s an occupational hazard of being the undergraduate in a research lab, I suppose. Over the past few years, though, the graphically-conscious side of me has gotten annoyed at the terrible Matlab figures I’ve seen on posters and even in papers. I have also come up with my own tricks to create really gorgeous Matlab figures. Over the next few posts, I’ll share a couple of them with you, including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Plotting error with patches instead of error bars&lt;/li&gt;
  &lt;li&gt;Changing default figure drawing parameters and sizing&lt;/li&gt;
  &lt;li&gt;Exporting figures&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;p&gt;Let’s start with the first one: error bars. Error bars are great when you have a few data points, but when you have more continuous data, it gets messy and hard to tell what’s going on, like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/-QhUOrl2lVn4/VI8TzYRXb3I/AAAAAAAACDs/qncwSUVQIng/s0/errorbars.png&quot; alt=&quot;error bars&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is created using a pretty simple script in Matlab. The data is generated pseudo-randomly:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;c&quot;&gt;% Generate pseudo-random data&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;num_data_points&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_data_points&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(:,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(:,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;i&lt;/span&gt;^&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% x values&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x_max&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;% Calculate mean and standard deviation of data&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_mean&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_std&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then it’s plotted with a few lines of code using the errorbar function:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;c&quot;&gt;% Plotting error with errorbar&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;errorbar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_vals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;LineWidth&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Plot error with errorbar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xlim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, I’ve discovered that using the patch function in Matlab can create much more visually appealing and easier to interpret graphs like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lh5.googleusercontent.com/-hCz5iD0iYGs/VI8WGnGXyXI/AAAAAAAACD8/E61dFOtEp0Y/s0/patch.png&quot; alt=&quot;error patch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This requires some additional code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;c&quot;&gt;% Plotting error with patches&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hold&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Plot error with patch&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xlim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;% Loop the x values back to the start&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;patch_x_vals&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_vals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_vals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)];&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;% Create the data+std and data-std values&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;patch_data_std&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_mean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)];&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_vals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;LineWidth&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch_x_vals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patch_data_std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;EdgeColor&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;None&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;FaceAlpha&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The patch is drawn as a polygon, starting on the left with the lower bound, then reversing direction to draw the upper bound of the error from right to left. The arguments to patch after this specify the face color, edge color, and transparency.&lt;/p&gt;

&lt;p&gt;This relatively minimal addition can make your plots much easier to read, particularly if you’re dealing with multiple data sets at the same time where error bars would overlap and be nearly impossible to distinguish.&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Dec 2014 12:19:00 -0500</pubDate>
        <link>http://blog.juliaebert.com/2014/12/15/shiny-matlab-figures-drawing-error-with-patches.html</link>
        <guid isPermaLink="true">http://blog.juliaebert.com/2014/12/15/shiny-matlab-figures-drawing-error-with-patches.html</guid>
        
        <category>Matlab</category>
        
        <category>plots</category>
        
        <category>figures</category>
        
        
      </item>
    
      <item>
        <title>An Awesomely Useful Thing: Google Keep</title>
        <description>&lt;p&gt;An Awesomely Useful Thing: Google KeepI am in constant search of something easy to serve as an external memory for everything I have to do and remember. A list on a piece of paper? Great until you misplace or forget the paper. An app? I thought I’d tried them all: ToDoist, Wunderlist, you name it. ToDoist is nice for individual tasks, but groups of things and notes to myself got complicated fast and I found that I wasn’t actually using it. It did have cross-system support, so I could use it in Chrome and on my iPad and Android phone. That was the major shortfall of many other apps I tried: if I don’t have my phone or computer, I still need my external memory.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Then I discovered that Google has its own feature, and I’m surprised that I had never heard of it: Google Keep. Since I am already fully integrated into the Google ecosystem, it fits fantastically with everything else I already use, too. Here’s how it works:&lt;/p&gt;

&lt;h2 id=&quot;create-notes&quot;&gt;Create Notes&lt;/h2&gt;

&lt;p&gt;You can make lists, checkbox lists, text, audio, or image notes to keep track of anything you need to. I have a grocery list, a list of things to do at work, and movies I want to watch, for example. These notes all show up on the keep website that you can drag to organize, recolor, and archive when you’re done. Plus, you can add an image to any note. I’m not a fan of most of the colors for the notes (they’re a bit bright for black text), but the whole thing uses Google’s great new Material design and is really slick overall. When you’re done, you can also archive notes instead of deleting them, in case you ever need to go back and check it in the future.&lt;/p&gt;

&lt;h2 id=&quot;share-notes&quot;&gt;Share Notes&lt;/h2&gt;

&lt;p&gt;You can share notes. Now you can make blame your roommate for not picking up more milk.&lt;/p&gt;

&lt;h2 id=&quot;remind-yourself&quot;&gt;Remind Yourself&lt;/h2&gt;

&lt;p&gt;You can also set reminders for your notes, by time or place, so you don’t forget what to do when or where you need to do it.&lt;/p&gt;

&lt;h2 id=&quot;see-it-everywhere&quot;&gt;See it Everywhere&lt;/h2&gt;

&lt;p&gt;One of the most useful features of Keep is that it has a nice web interface, Android app, and iOS app. Creating, organizing, and handling notes is straight forward in all of them without unnecessary distractions. Bonus: there’s a widget for Android, too. Because it’s all connected to your Google account, all of your notes are synced and instantly accessible anywhere you’re logged into Google - no installation necessary.&lt;/p&gt;

&lt;h2 id=&quot;overall&quot;&gt;Overall&lt;/h2&gt;

&lt;p&gt;Having some way to group or sort notes would be a great additional feature, but even without that it’s a great tool. I’d also like to see integration with reminders in the new Inbox, but that might come with time. Overall, Google Keep is the most painless way I have found to keep my thoughts in control: full-featured without being overwhelming, free and ad-free, and effectively cross-platform.&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Oct 2014 13:50:00 -0400</pubDate>
        <link>http://blog.juliaebert.com/2014/10/30/an-awesomely-useful-thing-google-keep.html</link>
        <guid isPermaLink="true">http://blog.juliaebert.com/2014/10/30/an-awesomely-useful-thing-google-keep.html</guid>
        
        <category>Google</category>
        
        <category>Keep</category>
        
        <category>todo</category>
        
        <category>organization</category>
        
        <category>lists</category>
        
        
      </item>
    
      <item>
        <title>DrRacket Tricks and Customization</title>
        <description>&lt;p&gt;My first programming class used DrRacket, and I have kept using it for the past three years as a tutor for that class, and now as a TA. Along the way, I’ve learned a bunch of tricks about DrRacket that can make programming in it easier and much more enjoyable.&lt;/p&gt;

&lt;!--more--&gt;

&lt;ul&gt;
  &lt;li&gt;Customize the color scheme to something you like. I explain how to get a bunch of options in [this post](/2014/09/10/how-to-make-drracket-more-pleasant-looking.html&lt;/li&gt;
  &lt;li&gt;Go to Edit &amp;gt; Preferences &amp;gt; Editing &amp;gt; General and check the box for “Enable automatic parentheses.” It automatically closes your parentheses and makes your life a lot easier.&lt;/li&gt;
  &lt;li&gt;In the same tab, also check “Show line numbers”&lt;/li&gt;
  &lt;li&gt;Instead of writing out lambda all the time, you can use a keyboard shortcut to get the character λ. It’s &lt;code&gt;Ctrl + \&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Fix code indentation for a section by highlighting it and pressing Tab.&lt;/li&gt;
  &lt;li&gt;Fix indentation for your entire file with &lt;code&gt;Ctrl + I&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;You can right click on any function name to search for it in the help desk.&lt;/li&gt;
  &lt;li&gt;You can change the default browser for opening documentation under Edit &amp;gt; Preferences &amp;gt; Browser.&lt;/li&gt;
  &lt;li&gt;To prevent a zillion windows from opening, go to Edit &amp;gt; Preferences &amp;gt; General and check “Open files in separate tabs”&lt;/li&gt;
  &lt;li&gt;When working with large programs the program contour is nice for navigating within the file. Turn it on with View &amp;gt; Show Program Contour or with &lt;code&gt;Ctrl + U&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;You can change the position of the Interactions area (below vs. to the right of the Definitions area) with View &amp;gt; Use Horizontal Layout.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 10 Sep 2014 16:02:10 -0400</pubDate>
        <link>http://blog.juliaebert.com/2014/09/10/drracket-tricks-and-customization.html</link>
        <guid isPermaLink="true">http://blog.juliaebert.com/2014/09/10/drracket-tricks-and-customization.html</guid>
        
        <category>DrRacket</category>
        
        <category>programming</category>
        
        <category>Racket</category>
        
        <category>customization</category>
        
        
      </item>
    
  </channel>
</rss>
